Object.defineProperty(exports,"__esModule",{value:true});function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}var flatten=function flatten(arr){return arr.reduce(function(flat,toFlatten){return flat.concat(Array.isArray(toFlatten)?flatten(toFlatten):toFlatten);},[]);};var extractSuggestion=function extractSuggestion(val){switch(typeof val){case'string':return val.toLowerCase();case'object':if(Array.isArray(val)){return flatten(val);}return null;default:return val;}};var getSuggestions=function getSuggestions(fields,suggestions,currentValue){var suggestionsList=[];var labelsList=[];var populateSuggestionsList=function populateSuggestionsList(val){var isWordMatch=currentValue.trim().split(' ').some(function(term){return val.includes(term);});if(isWordMatch&&!labelsList.includes(val)){var option={label:val,value:val};labelsList=[].concat(_toConsumableArray(labelsList),[val]);suggestionsList=[].concat(_toConsumableArray(suggestionsList),[option]);}};suggestions.forEach(function(item){fields.forEach(function(field){var label=item._source[field];if(label){var val=extractSuggestion(label);if(val){if(Array.isArray(val)){val.forEach(function(suggestion){return populateSuggestionsList(suggestion);});}else{populateSuggestionsList(val);}}}});});return suggestionsList;};exports.default=getSuggestions;