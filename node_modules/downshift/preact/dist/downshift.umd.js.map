{"version":3,"file":"downshift.umd.js","sources":["../../src/set-a11y-status.js","../../src/utils.js","../../src/downshift.js","../../src/index.js"],"sourcesContent":["// istanbul ignore next\nlet statusDiv =\n  typeof document === 'undefined'\n    ? null\n    : document.getElementById('a11y-status-message')\n\nlet statuses = []\n\nfunction setStatus(status) {\n  const isSameAsLast = statuses[statuses.length - 1] === status\n  if (isSameAsLast) {\n    statuses = [...statuses, status]\n  } else {\n    statuses = [status]\n  }\n  const div = getStatusDiv()\n\n  // Remove previous children\n  while (div.lastChild) {\n    div.removeChild(div.firstChild)\n  }\n\n  statuses.filter(Boolean).forEach((statusItem, index) => {\n    div.appendChild(getStatusChildDiv(statusItem, index))\n  })\n}\n\nfunction getStatusChildDiv(status, index) {\n  const display = index === statuses.length - 1 ? 'block' : 'none'\n\n  const childDiv = document.createElement('div')\n  childDiv.style.display = display\n  childDiv.textContent = status\n\n  return childDiv\n}\n\nfunction getStatusDiv() {\n  if (statusDiv) {\n    return statusDiv\n  }\n  statusDiv = document.createElement('div')\n  statusDiv.setAttribute('id', 'a11y-status-message')\n  statusDiv.setAttribute('role', 'status')\n  statusDiv.setAttribute('aria-live', 'assertive')\n  statusDiv.setAttribute('aria-relevant', 'additions text')\n  Object.assign(statusDiv.style, {\n    border: '0',\n    clip: 'rect(0 0 0 0)',\n    height: '1px',\n    margin: '-1px',\n    overflow: 'hidden',\n    padding: '0',\n    position: 'absolute',\n    width: '1px',\n  })\n  document.body.appendChild(statusDiv)\n  return statusDiv\n}\n\nexport default setStatus\n","let idCounter = 1\n\n/**\n * Accepts a parameter and returns it if it's a function\n * or a noop function if it's not. This allows us to\n * accept a callback, but not worry about it if it's not\n * passed.\n * @param {Function} cb the callback\n * @return {Function} a function\n */\nfunction cbToCb(cb) {\n  return typeof cb === 'function' ? cb : noop\n}\nfunction noop() {}\n\nfunction findParent(finder, node, rootNode) {\n  if (node !== null && node !== rootNode.parentNode) {\n    if (finder(node)) {\n      if (node === document.body && node.scrollTop === 0) {\n        // in chrome body.scrollTop always return 0\n        return document.documentElement\n      }\n      return node\n    } else {\n      return findParent(finder, node.parentNode, rootNode)\n    }\n  } else {\n    return null\n  }\n}\n\n/**\n * Get the closest element that scrolls\n * @param {HTMLElement} node - the child element to start searching for scroll parent at\n * @param {HTMLElement} rootNode - the root element of the component\n * @return {HTMLElement} the closest parentNode that scrolls\n */\nconst getClosestScrollParent = findParent.bind(\n  null,\n  node => node.scrollHeight > node.clientHeight,\n)\n\n/**\n * Scroll node into view if necessary\n * @param {HTMLElement} node - the element that should scroll into view\n * @param {HTMLElement} rootNode - the root element of the component\n * @param {Boolean} alignToTop - align element to the top of the visible area of the scrollable ancestor\n */\n// eslint-disable-next-line complexity\nfunction scrollIntoView(node, rootNode) {\n  const scrollParent = getClosestScrollParent(node, rootNode)\n  if (scrollParent === null) {\n    return\n  }\n  const scrollParentStyles = getComputedStyle(scrollParent)\n  const scrollParentRect = scrollParent.getBoundingClientRect()\n  const scrollParentBorderTopWidth = parseInt(\n    scrollParentStyles.borderTopWidth,\n    10,\n  )\n  const scrollParentBorderBottomWidth = parseInt(\n    scrollParentStyles.borderBottomWidth,\n    10,\n  )\n  const bordersWidth =\n    scrollParentBorderTopWidth + scrollParentBorderBottomWidth\n  const scrollParentTop = scrollParentRect.top + scrollParentBorderTopWidth\n  const nodeRect = node.getBoundingClientRect()\n\n  if (nodeRect.top < 0 && scrollParentRect.top < 0) {\n    scrollParent.scrollTop += nodeRect.top\n    return\n  }\n\n  if (nodeRect.top < 0) {\n    // the item is above the viewport and the parent is not above the viewport\n    scrollParent.scrollTop += nodeRect.top - scrollParentTop\n    return\n  }\n\n  if (nodeRect.top > 0 && scrollParentRect.top < 0) {\n    if (\n      scrollParentRect.bottom > 0 &&\n      nodeRect.bottom + bordersWidth > scrollParentRect.bottom\n    ) {\n      // the item is below scrollable area\n      scrollParent.scrollTop +=\n        nodeRect.bottom - scrollParentRect.bottom + bordersWidth\n    }\n    // item and parent top are on different sides of view top border (do nothing)\n    return\n  }\n\n  const nodeOffsetTop = nodeRect.top + scrollParent.scrollTop\n  const nodeTop = nodeOffsetTop - scrollParentTop\n  if (nodeTop < scrollParent.scrollTop) {\n    // the item is above the scrollable area\n    scrollParent.scrollTop = nodeTop\n  } else if (\n    nodeTop + nodeRect.height + bordersWidth >\n    scrollParent.scrollTop + scrollParentRect.height\n  ) {\n    // the item is below the scrollable area\n    scrollParent.scrollTop =\n      nodeTop + nodeRect.height - scrollParentRect.height + bordersWidth\n  }\n  // the item is within the scrollable area (do nothing)\n}\n\n/**\n * Simple debounce implementation. Will call the given\n * function once after the time given has passed since\n * it was last called.\n * @param {Function} fn the function to call after the time\n * @param {Number} time the time to wait\n * @return {Function} the debounced function\n */\nfunction debounce(fn, time) {\n  let timeoutId\n  return wrapper\n  function wrapper(...args) {\n    if (timeoutId) {\n      clearTimeout(timeoutId)\n    }\n    timeoutId = setTimeout(() => {\n      timeoutId = null\n      fn(...args)\n    }, time)\n  }\n}\n\n/**\n * This is intended to be used to compose event handlers\n * They are executed in order until one of them calls\n * `event.preventDefault()`. Not sure this is the best\n * way to do this, but it seems legit...\n * @param {Function} fns the event hanlder functions\n * @return {Function} the event handler to add to an element\n */\nfunction composeEventHandlers(...fns) {\n  return (event, ...args) =>\n    fns.some(fn => {\n      fn && fn(event, ...args)\n      return event.defaultPrevented\n    })\n}\n\n/**\n * This generates a unique ID for all autocomplete inputs\n * @param {String} prefix the prefix for the id\n * @return {String} the unique ID\n */\nfunction generateId(prefix) {\n  return `${prefix}-${idCounter++}`\n}\n\n/**\n * This is only used in tests... Could be useful in SSR?\n * @param {Number} num The number to set the idCountry to\n */\nfunction setIdCounter(num) {\n  idCounter = num\n}\n\n/**\n * Returns the first argument that is not undefined\n * @param {...*} args the arguments\n * @return {*} the defined value\n */\nfunction firstDefined(...args) {\n  return args.find(a => typeof a !== 'undefined')\n}\n\n// eslint-disable-next-line complexity\nfunction getA11yStatusMessage({\n  isOpen,\n  highlightedItem,\n  selectedItem,\n  resultCount,\n  previousResultCount,\n  itemToString,\n}) {\n  if (!isOpen) {\n    if (selectedItem) {\n      return itemToString(selectedItem)\n    } else {\n      return ''\n    }\n  }\n  const resultCountChanged = resultCount !== previousResultCount\n  if (!resultCount) {\n    return 'No results.'\n  } else if (!highlightedItem || resultCountChanged) {\n    return `${resultCount} ${\n      resultCount === 1 ? 'result is' : 'results are'\n    } available, use up and down arrow keys to navigate.`\n  }\n  return itemToString(highlightedItem)\n}\n\n/**\n * Takes an argument and if it's an array, returns the first item in the array\n * otherwise returns the argument\n * @param {*} arg the maybe-array\n * @param {*} defaultValue the value if arg is falsey not defined\n * @return {*} the arg or it's first item\n */\nfunction unwrapArray(arg, defaultValue) {\n  arg = Array.isArray(arg) ? /* istanbul ignore next (preact) */ arg[0] : arg\n  if (!arg && defaultValue) {\n    return defaultValue\n  } else {\n    return arg\n  }\n}\n\n/**\n * @param {Object} element (P)react element\n * @return {Boolean} whether it's a DOM element\n */\nfunction isDOMElement(element) {\n  /* istanbul ignore if */\n  if (element.nodeName) {\n    // then this is preact\n    return typeof element.nodeName === 'string'\n  } else {\n    // then we assume this is react\n    return typeof element.type === 'string'\n  }\n}\n\n/**\n * @param {Object} element (P)react element\n * @return {Object} the props\n */\nfunction getElementProps(element) {\n  // props for react, attributes for preact\n  return element.props || /* istanbul ignore next (preact) */ element.attributes\n}\n\n/**\n * Throws a helpful error message for required properties. Useful\n * to be used as a default in destructuring or object params.\n * @param {String} fnName the function name\n * @param {String} propName the prop name\n */\nfunction requiredProp(fnName, propName) {\n  throw new Error(`The property \"${propName}\" is required in \"${fnName}\"`)\n}\n\nconst stateKeys = [\n  'highlightedIndex',\n  'inputValue',\n  'isOpen',\n  'selectedItem',\n  'type',\n]\n/**\n * @param {Object} state The state object\n * @return {Object} State that is relevant to downshift\n */\nfunction pickState(state = {}) {\n  const result = {}\n  stateKeys.forEach(k => {\n    if (state.hasOwnProperty(k)) {\n      result[k] = state[k]\n    }\n  })\n  return result\n}\n\nexport {\n  cbToCb,\n  composeEventHandlers,\n  debounce,\n  scrollIntoView,\n  findParent,\n  generateId,\n  firstDefined,\n  getA11yStatusMessage,\n  unwrapArray,\n  isDOMElement,\n  getElementProps,\n  noop,\n  requiredProp,\n  setIdCounter,\n  pickState,\n  isPlainObject,\n}\n\n/**\n * Simple check if the value passed is object literal\n * @param {*} obj any things\n * @return {Boolean} whether it's object literal\n */\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]'\n}\n","/* eslint camelcase:0 */\n\nimport React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport preval from 'preval.macro'\nimport setA11yStatus from './set-a11y-status'\nimport {\n  cbToCb,\n  composeEventHandlers,\n  debounce,\n  scrollIntoView,\n  generateId,\n  firstDefined,\n  getA11yStatusMessage,\n  unwrapArray,\n  isDOMElement,\n  getElementProps,\n  noop,\n  requiredProp,\n  pickState,\n  isPlainObject,\n} from './utils'\n\nclass Downshift extends Component {\n  static propTypes = {\n    children: PropTypes.func,\n    render: PropTypes.func,\n    defaultHighlightedIndex: PropTypes.number,\n    defaultSelectedItem: PropTypes.any,\n    defaultInputValue: PropTypes.string,\n    defaultIsOpen: PropTypes.bool,\n    getA11yStatusMessage: PropTypes.func,\n    itemToString: PropTypes.func,\n    onChange: PropTypes.func,\n    onSelect: PropTypes.func,\n    onStateChange: PropTypes.func,\n    onInputValueChange: PropTypes.func,\n    onUserAction: PropTypes.func,\n    onClick: PropTypes.func,\n    onOuterClick: PropTypes.func,\n    selectedItemChanged: PropTypes.func,\n    itemCount: PropTypes.number,\n    id: PropTypes.string,\n    environment: PropTypes.shape({\n      addEventListener: PropTypes.func,\n      removeEventListener: PropTypes.func,\n      document: PropTypes.shape({\n        getElementById: PropTypes.func,\n        activeElement: PropTypes.any,\n        body: PropTypes.any,\n      }),\n    }),\n    // things we keep in state for uncontrolled components\n    // but can accept as props for controlled components\n    /* eslint-disable react/no-unused-prop-types */\n    selectedItem: PropTypes.any,\n    isOpen: PropTypes.bool,\n    inputValue: PropTypes.string,\n    highlightedIndex: PropTypes.number,\n    breakingChanges: PropTypes.shape({\n      resetInputOnSelection: PropTypes.bool,\n    }),\n    /* eslint-enable */\n  }\n\n  static defaultProps = {\n    defaultHighlightedIndex: null,\n    defaultSelectedItem: null,\n    defaultInputValue: '',\n    defaultIsOpen: false,\n    getA11yStatusMessage,\n    id: generateId('downshift'),\n    itemToString: i => {\n      if (i == null) {\n        return ''\n      }\n      if (process.env.NODE_ENV !== 'production' && isPlainObject(i)) {\n        //eslint-disable-next-line no-console\n        console.warn(\n          'downshift: An object was passed to the default implementation of `itemToString`. You should probably provide your own `itemToString` implementation. Please refer to the `itemToString` API documentation.',\n          'The object that was passed:',\n          i,\n        )\n      }\n      return String(i)\n    },\n    onStateChange: () => {},\n    onInputValueChange: () => {},\n    onUserAction: () => {},\n    onChange: () => {},\n    onSelect: () => {},\n    onOuterClick: () => {},\n    selectedItemChanged: (prevItem, item) => prevItem !== item,\n    environment:\n      typeof window === 'undefined' /* istanbul ignore next (ssr) */\n        ? {}\n        : window,\n    breakingChanges: {},\n  }\n\n  // this is an experimental feature\n  // so we're not going to document this yet\n  // nor are we going to test it.\n  // We will try to avoid breaking it, but\n  // we make no guarantees.\n  // If you need it, we recommend that you lock\n  // down your version of downshift (don't use a\n  // version range) to avoid surprise breakages.\n  static stateChangeTypes = {\n    unknown: '__autocomplete_unknown__',\n    mouseUp: '__autocomplete_mouseup__',\n    itemMouseEnter: '__autocomplete_item_mouseenter__',\n    keyDownArrowUp: '__autocomplete_keydown_arrow_up__',\n    keyDownArrowDown: '__autocomplete_keydown_arrow_down__',\n    keyDownEscape: '__autocomplete_keydown_escape__',\n    keyDownEnter: '__autocomplete_keydown_enter__',\n    blurInput: '__autocomplete_blur_input__',\n    changeInput: '__autocomplete_change_input__',\n    keyDownSpaceButton: '__autocomplete_keydown_space_button__',\n    clickButton: '__autocomplete_click_button__',\n    controlledPropUpdatedSelectedItem:\n      '__autocomplete_controlled_prop_updated_selected_item__',\n  }\n\n  constructor(...args) {\n    super(...args)\n    const state = this.getState({\n      highlightedIndex: this.props.defaultHighlightedIndex,\n      isOpen: this.props.defaultIsOpen,\n      inputValue: this.props.defaultInputValue,\n      selectedItem: this.props.defaultSelectedItem,\n    })\n    if (state.selectedItem) {\n      state.inputValue = this.props.itemToString(state.selectedItem)\n    }\n    this.state = state\n  }\n\n  root_handleClick = composeEventHandlers(\n    this.props.onClick,\n    this.root_handleClick,\n  )\n  input = null\n  items = []\n  // itemCount can be changed asynchronously\n  // from within downshift (so it can't come from a prop)\n  // this is why we store it as an instance and use\n  // getItemCount rather than just use items.length\n  // (to support windowing + async)\n  itemCount = null\n  previousResultCount = 0\n\n  /**\n   * Gets the state based on internal state or props\n   * If a state value is passed via props, then that\n   * is the value given, otherwise it's retrieved from\n   * stateToMerge\n   *\n   * This will perform a shallow merge of the given state object\n   * with the state coming from props\n   * (for the controlled component scenario)\n   * This is used in state updater functions so they're referencing\n   * the right state regardless of where it comes from.\n   *\n   * @param {Object} stateToMerge defaults to this.state\n   * @return {Object} the state\n   */\n  getState(stateToMerge = this.state) {\n    return Object.keys(stateToMerge).reduce((state, key) => {\n      state[key] = this.isControlledProp(key)\n        ? this.props[key]\n        : stateToMerge[key]\n      return state\n    }, {})\n  }\n\n  /**\n   * This determines whether a prop is a \"controlled prop\" meaning it is\n   * state which is controlled by the outside of this component rather\n   * than within this component.\n   * @param {String} key the key to check\n   * @return {Boolean} whether it is a controlled controlled prop\n   */\n  isControlledProp(key) {\n    return this.props[key] !== undefined\n  }\n\n  getItemCount() {\n    // things read better this way. They're in priority order:\n    // 1. `this.itemCount`\n    // 2. `this.props.itemCount`\n    // 3. `this.items.length`\n    /* eslint-disable no-negated-condition */\n    if (this.itemCount != null) {\n      return this.itemCount\n    } else if (this.props.itemCount !== undefined) {\n      return this.props.itemCount\n    } else {\n      return this.items.length\n    }\n    /* eslint-enable no-negated-condition */\n  }\n\n  setItemCount = count => (this.itemCount = count)\n  unsetItemCount = () => (this.itemCount = null)\n\n  getItemNodeFromIndex = index => {\n    return this.props.environment.document.getElementById(this.getItemId(index))\n  }\n\n  setHighlightedIndex = (\n    highlightedIndex = this.props.defaultHighlightedIndex,\n    otherStateToSet = {},\n  ) => {\n    otherStateToSet = pickState(otherStateToSet)\n    this.internalSetState({highlightedIndex, ...otherStateToSet})\n  }\n\n  scrollHighlightedItemIntoView = () => {\n    const node = this.getItemNodeFromIndex(this.getState().highlightedIndex)\n    const rootNode = this._rootNode\n    scrollIntoView(node, rootNode)\n  }\n\n  openAndHighlightDefaultIndex = (otherStateToSet = {}) => {\n    this.setHighlightedIndex(undefined, {isOpen: true, ...otherStateToSet})\n  }\n\n  highlightDefaultIndex = (otherStateToSet = {}) => {\n    this.setHighlightedIndex(undefined, otherStateToSet)\n  }\n\n  moveHighlightedIndex = (amount, otherStateToSet) => {\n    if (this.getState().isOpen) {\n      this.changeHighlightedIndex(amount, otherStateToSet)\n    } else {\n      this.openAndHighlightDefaultIndex(otherStateToSet)\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  changeHighlightedIndex = (moveAmount, otherStateToSet) => {\n    const itemsLastIndex = this.getItemCount() - 1\n    if (itemsLastIndex < 0) {\n      return\n    }\n    const {highlightedIndex} = this.getState()\n    let baseIndex = highlightedIndex\n    if (baseIndex === null) {\n      baseIndex = moveAmount > 0 ? -1 : itemsLastIndex + 1\n    }\n    let newIndex = baseIndex + moveAmount\n    if (newIndex < 0) {\n      newIndex = itemsLastIndex\n    } else if (newIndex > itemsLastIndex) {\n      newIndex = 0\n    }\n    this.setHighlightedIndex(newIndex, otherStateToSet)\n  }\n\n  clearSelection = cb => {\n    this.internalSetState(\n      {\n        selectedItem: null,\n        inputValue: '',\n        isOpen: false,\n      },\n      () => {\n        const inputNode = this._rootNode.querySelector(`#${this.inputId}`)\n        inputNode && inputNode.focus && inputNode.focus()\n        cbToCb(cb)()\n      },\n    )\n  }\n\n  selectItem = (item, otherStateToSet, cb) => {\n    otherStateToSet = pickState(otherStateToSet)\n    this.internalSetState(\n      {\n        isOpen: false,\n        highlightedIndex: this.props.defaultHighlightedIndex,\n        selectedItem: item,\n        inputValue:\n          this.isControlledProp('selectedItem') &&\n          this.props.breakingChanges.resetInputOnSelection\n            ? this.props.defaultInputValue\n            : this.props.itemToString(item),\n        ...otherStateToSet,\n      },\n      cbToCb(cb),\n    )\n  }\n\n  selectItemAtIndex = (itemIndex, otherStateToSet, cb) => {\n    const item = this.items[itemIndex]\n    if (item == null) {\n      return\n    }\n    this.selectItem(item, otherStateToSet, cb)\n  }\n\n  selectHighlightedItem = (otherStateToSet, cb) => {\n    return this.selectItemAtIndex(\n      this.getState().highlightedIndex,\n      otherStateToSet,\n      cb,\n    )\n  }\n\n  // any piece of our state can live in two places:\n  // 1. Uncontrolled: it's internal (this.state)\n  //    We will call this.setState to update that state\n  // 2. Controlled: it's external (this.props)\n  //    We will call this.props.onStateChange to update that state\n  //\n  // In addition, we'll call this.props.onChange if the\n  // selectedItem is changed.\n  internalSetState(stateToSet, cb) {\n    let isItemSelected, onChangeArg\n\n    const onStateChangeArg = {}\n    const isStateToSetFunction = typeof stateToSet === 'function'\n\n    // we want to call `onInputValueChange` before the `setState` call\n    // so someone controlling the `inputValue` state gets notified of\n    // the input change as soon as possible. This avoids issues with\n    // preserving the cursor position.\n    // See https://github.com/paypal/downshift/issues/217 for more info.\n    if (!isStateToSetFunction && stateToSet.hasOwnProperty('inputValue')) {\n      this.props.onInputValueChange(stateToSet.inputValue, {\n        ...this.getStateAndHelpers(),\n        ...stateToSet,\n      })\n    }\n    return this.setState(\n      state => {\n        state = this.getState(state)\n        stateToSet = isStateToSetFunction ? stateToSet(state) : stateToSet\n\n        // checks if an item is selected, regardless of if it's different from\n        // what was selected before\n        // used to determine if onSelect and onChange callbacks should be called\n        isItemSelected = stateToSet.hasOwnProperty('selectedItem')\n        // this keeps track of the object we want to call with setState\n        const nextState = {}\n        // this is just used to tell whether the state changed\n        const nextFullState = {}\n        // we need to call on change if the outside world is controlling any of our state\n        // and we're trying to update that state. OR if the selection has changed and we're\n        // trying to update the selection\n        if (isItemSelected && stateToSet.selectedItem !== state.selectedItem) {\n          onChangeArg = stateToSet.selectedItem\n        }\n        stateToSet.type = stateToSet.type || Downshift.stateChangeTypes.unknown\n\n        Object.keys(stateToSet).forEach(key => {\n          // onStateChangeArg should only have the state that is\n          // actually changing\n          if (state[key] !== stateToSet[key]) {\n            onStateChangeArg[key] = stateToSet[key]\n          }\n          // the type is useful for the onStateChangeArg\n          // but we don't actually want to set it in internal state.\n          // this is an undocumented feature for now... Not all internalSetState\n          // calls support it and I'm not certain we want them to yet.\n          // But it enables users controlling the isOpen state to know when\n          // the isOpen state changes due to mouseup events which is quite handy.\n          if (key === 'type') {\n            return\n          }\n          nextFullState[key] = stateToSet[key]\n          // if it's coming from props, then we don't care to set it internally\n          if (!this.isControlledProp(key)) {\n            nextState[key] = stateToSet[key]\n          }\n        })\n\n        // if stateToSet is a function, then we weren't able to call onInputValueChange\n        // earlier, so we'll call it now that we know what the inputValue state will be.\n        if (isStateToSetFunction && stateToSet.hasOwnProperty('inputValue')) {\n          this.props.onInputValueChange(stateToSet.inputValue, {\n            ...this.getStateAndHelpers(),\n            ...stateToSet,\n          })\n        }\n\n        return nextState\n      },\n      () => {\n        // call the provided callback if it's a callback\n        cbToCb(cb)()\n\n        // only call the onStateChange and onChange callbacks if\n        // we have relevant information to pass them.\n        const hasMoreStateThanType = Object.keys(onStateChangeArg).length > 1\n        if (hasMoreStateThanType) {\n          this.props.onStateChange(onStateChangeArg, this.getStateAndHelpers())\n        }\n\n        if (isItemSelected) {\n          this.props.onSelect(\n            stateToSet.selectedItem,\n            this.getStateAndHelpers(),\n          )\n        }\n\n        if (onChangeArg !== undefined) {\n          this.props.onChange(onChangeArg, this.getStateAndHelpers())\n        }\n        // this is currently undocumented and therefore subject to change\n        // We'll try to not break it, but just be warned.\n        this.props.onUserAction(onStateChangeArg, this.getStateAndHelpers())\n      },\n    )\n  }\n\n  getStateAndHelpers() {\n    const {highlightedIndex, inputValue, selectedItem, isOpen} = this.getState()\n    const {id, itemToString} = this.props\n    const {\n      getRootProps,\n      getButtonProps,\n      getLabelProps,\n      getInputProps,\n      getItemProps,\n      openMenu,\n      closeMenu,\n      toggleMenu,\n      selectItem,\n      selectItemAtIndex,\n      selectHighlightedItem,\n      setHighlightedIndex,\n      clearSelection,\n      clearItems,\n      reset,\n      setItemCount,\n      unsetItemCount,\n    } = this\n    return {\n      // prop getters\n      getRootProps,\n      getButtonProps,\n      getLabelProps,\n      getInputProps,\n      getItemProps,\n\n      // actions\n      reset,\n      openMenu,\n      closeMenu,\n      toggleMenu,\n      selectItem,\n      selectItemAtIndex,\n      selectHighlightedItem,\n      setHighlightedIndex,\n      clearSelection,\n      clearItems,\n      setItemCount,\n      unsetItemCount,\n\n      //props\n      itemToString,\n      id,\n\n      // state\n      highlightedIndex,\n      inputValue,\n      isOpen,\n      selectedItem,\n    }\n  }\n\n  //////////////////////////// ROOT\n\n  rootRef = node => (this._rootNode = node)\n\n  getRootProps = (\n    {refKey = 'ref', ...rest} = {},\n    {suppressRefError = false} = {},\n  ) => {\n    // this is used in the render to know whether the user has called getRootProps.\n    // It uses that to know whether to apply the props automatically\n    this.getRootProps.called = true\n    this.getRootProps.refKey = refKey\n    this.getRootProps.suppressRefError = suppressRefError\n    return {\n      [refKey]: this.rootRef,\n      ...rest,\n    }\n  }\n\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ ROOT\n\n  keyDownHandlers = {\n    ArrowDown(event) {\n      event.preventDefault()\n      const amount = event.shiftKey ? 5 : 1\n      this.moveHighlightedIndex(amount, {\n        type: Downshift.stateChangeTypes.keyDownArrowDown,\n      })\n    },\n\n    ArrowUp(event) {\n      event.preventDefault()\n      const amount = event.shiftKey ? -5 : -1\n      this.moveHighlightedIndex(amount, {\n        type: Downshift.stateChangeTypes.keyDownArrowUp,\n      })\n    },\n\n    Enter(event) {\n      if (this.getState().isOpen) {\n        event.preventDefault()\n        this.selectHighlightedItem({\n          type: Downshift.stateChangeTypes.keyDownEnter,\n        })\n      }\n    },\n\n    Escape(event) {\n      event.preventDefault()\n      this.reset({type: Downshift.stateChangeTypes.keyDownEscape})\n    },\n  }\n\n  //////////////////////////// BUTTON\n\n  buttonKeyDownHandlers = {\n    ...this.keyDownHandlers,\n\n    ' '(event) {\n      event.preventDefault()\n      this.toggleMenu({type: Downshift.stateChangeTypes.keyDownSpaceButton})\n    },\n  }\n\n  getButtonProps = ({onClick, onKeyDown, ...rest} = {}) => {\n    const {isOpen} = this.getState()\n    const eventHandlers = rest.disabled\n      ? {}\n      : {\n          onClick: composeEventHandlers(onClick, this.button_handleClick),\n          onKeyDown: composeEventHandlers(onKeyDown, this.button_handleKeyDown),\n        }\n    return {\n      role: 'button',\n      'aria-label': isOpen ? 'close menu' : 'open menu',\n      'aria-expanded': isOpen,\n      'aria-haspopup': true,\n      ...eventHandlers,\n      ...rest,\n    }\n  }\n\n  button_handleKeyDown = event => {\n    if (this.buttonKeyDownHandlers[event.key]) {\n      this.buttonKeyDownHandlers[event.key].call(this, event)\n    }\n  }\n\n  button_handleClick = event => {\n    event.preventDefault()\n    // handle odd case for Safari and Firefox which\n    // don't give the button the focus properly.\n    /* istanbul ignore if (can't reasonably test this) */\n    if (\n      this.props.environment.document.activeElement ===\n      this.props.environment.document.body\n    ) {\n      event.target.focus()\n    }\n    this.toggleMenu({type: Downshift.stateChangeTypes.clickButton})\n  }\n\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ BUTTON\n\n  /////////////////////////////// LABEL\n\n  getLabelProps = (props = {}) => {\n    this.getLabelProps.called = true\n    if (\n      this.getInputProps.called &&\n      props.htmlFor &&\n      props.htmlFor !== this.inputId\n    ) {\n      throw new Error(\n        `downshift: You provided the htmlFor of \"${\n          props.htmlFor\n        }\" for your label, but the id of your input is \"${\n          this.inputId\n        }\". You must either remove the id from your input or set the htmlFor of the label equal to the input id.`,\n      )\n    }\n    this.inputId = firstDefined(\n      this.inputId,\n      props.htmlFor,\n      generateId('downshift-input'),\n    )\n    return {\n      ...props,\n      htmlFor: this.inputId,\n    }\n  }\n\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ LABEL\n\n  /////////////////////////////// INPUT\n\n  getInputProps = ({onKeyDown, onBlur, onChange, onInput, ...rest} = {}) => {\n    this.getInputProps.called = true\n    if (this.getLabelProps.called && rest.id && rest.id !== this.inputId) {\n      throw new Error(\n        `downshift: You provided the id of \"${\n          rest.id\n        }\" for your input, but the htmlFor of your label is \"${\n          this.inputId\n        }\". You must either remove the id from your input or set the htmlFor of the label equal to the input id.`,\n      )\n    }\n    this.inputId = firstDefined(\n      this.inputId,\n      rest.id,\n      generateId('downshift-input'),\n    )\n    // the boolean cast here is necessary due to a weird deal with\n    // babel-plugin-istanbul + preval.macro. No idea...\n    const isPreact = Boolean(\n      preval`module.exports = process.env.BUILD_PREACT === 'true'`,\n    )\n    const onChangeKey = isPreact /* istanbul ignore next (preact) */\n      ? 'onInput'\n      : 'onChange'\n    const {inputValue, isOpen, highlightedIndex} = this.getState()\n    const eventHandlers = rest.disabled\n      ? {}\n      : {\n          // preact compatibility\n          [onChangeKey]: composeEventHandlers(\n            onChange,\n            onInput,\n            this.input_handleChange,\n          ),\n          onKeyDown: composeEventHandlers(onKeyDown, this.input_handleKeyDown),\n          onBlur: composeEventHandlers(onBlur, this.input_handleBlur),\n        }\n    return {\n      role: 'combobox',\n      'aria-autocomplete': 'list',\n      'aria-expanded': isOpen,\n      'aria-activedescendant':\n        isOpen && typeof highlightedIndex === 'number' && highlightedIndex >= 0\n          ? this.getItemId(highlightedIndex)\n          : null,\n      autoComplete: 'off',\n      value: inputValue,\n      ...eventHandlers,\n      ...rest,\n      id: this.inputId,\n    }\n  }\n\n  input_handleKeyDown = event => {\n    if (event.key && this.keyDownHandlers[event.key]) {\n      this.keyDownHandlers[event.key].call(this, event)\n    }\n  }\n\n  input_handleChange = event => {\n    this.internalSetState({\n      type: Downshift.stateChangeTypes.changeInput,\n      isOpen: true,\n      inputValue: event.target.value,\n    })\n  }\n\n  input_handleBlur = () => {\n    if (!this.isMouseDown) {\n      this.reset({type: Downshift.stateChangeTypes.blurInput})\n    }\n  }\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ INPUT\n\n  /////////////////////////////// ITEM\n  getItemId(index) {\n    return `${this.props.id}-item-${index}`\n  }\n\n  getItemProps = ({\n    onMouseMove,\n    onClick,\n    index,\n    item = requiredProp('getItemProps', 'item'),\n    ...rest\n  } = {}) => {\n    if (index === undefined) {\n      this.items.push(item)\n      index = this.items.indexOf(item)\n    } else {\n      this.items[index] = item\n    }\n    return {\n      id: this.getItemId(index),\n      // onMouseMove is used over onMouseEnter here. onMouseMove\n      // is only triggered on actual mouse movement while onMouseEnter\n      // can fire on DOM changes, interrupting keyboard navigation\n      onMouseMove: composeEventHandlers(onMouseMove, () => {\n        if (index === this.getState().highlightedIndex) {\n          return\n        }\n        this.setHighlightedIndex(index, {\n          type: Downshift.stateChangeTypes.itemMouseEnter,\n        })\n\n        // We never want to manually scroll when changing state based\n        // on `onMouseMove` because we will be moving the element out\n        // from under the user which is currently scrolling/moving the\n        // cursor\n        this.avoidScrolling = true\n        setTimeout(() => (this.avoidScrolling = false), 250)\n      }),\n      onClick: composeEventHandlers(onClick, () => {\n        this.selectItemAtIndex(index)\n      }),\n      ...rest,\n    }\n  }\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ ITEM\n\n  clearItems = () => {\n    this.items = []\n  }\n\n  reset = (otherStateToSet = {}, cb) => {\n    otherStateToSet = pickState(otherStateToSet)\n    this.internalSetState(\n      ({selectedItem}) => ({\n        isOpen: false,\n        highlightedIndex: this.props.defaultHighlightedIndex,\n        inputValue: this.props.itemToString(selectedItem),\n        ...otherStateToSet,\n      }),\n      cbToCb(cb),\n    )\n  }\n\n  toggleMenu = (otherStateToSet = {}, cb) => {\n    otherStateToSet = pickState(otherStateToSet)\n    this.internalSetState(\n      ({isOpen}) => {\n        return {isOpen: !isOpen, ...otherStateToSet}\n      },\n      () => {\n        const {isOpen} = this.getState()\n        if (isOpen) {\n          this.highlightDefaultIndex()\n        }\n        cbToCb(cb)()\n      },\n    )\n  }\n\n  openMenu = cb => {\n    this.internalSetState({isOpen: true}, cbToCb(cb))\n  }\n\n  closeMenu = cb => {\n    this.internalSetState({isOpen: false}, cbToCb(cb))\n  }\n\n  updateStatus = debounce(() => {\n    if (!this._isMounted) {\n      return\n    }\n    const state = this.getState()\n    const item = this.items[state.highlightedIndex] || {}\n    const resultCount = this.getItemCount()\n    const status = this.props.getA11yStatusMessage({\n      itemToString: this.props.itemToString,\n      previousResultCount: this.previousResultCount,\n      resultCount,\n      highlightedItem: item,\n      ...state,\n    })\n    this.previousResultCount = resultCount\n    setA11yStatus(status)\n  }, 200)\n\n  componentDidMount() {\n    // the _isMounted property is because we have `updateStatus` in a `debounce`\n    // and we don't want to update the status if the component has been umounted\n    this._isMounted = true\n    // this.isMouseDown helps us track whether the mouse is currently held down.\n    // This is useful when the user clicks on an item in the list, but holds the mouse\n    // down long enough for the list to disappear (because the blur event fires on the input)\n    // this.isMouseDown is used in the blur handler on the input to determine whether the blur event should\n    // trigger hiding the menu.\n    const onMouseDown = () => {\n      this.isMouseDown = true\n    }\n    const onMouseUp = event => {\n      this.isMouseDown = false\n      if (\n        (event.target === this._rootNode ||\n          !this._rootNode.contains(event.target)) &&\n        this.getState().isOpen\n      ) {\n        this.reset({type: Downshift.stateChangeTypes.mouseUp}, () =>\n          this.props.onOuterClick(this.getStateAndHelpers()),\n        )\n      }\n    }\n    this.props.environment.addEventListener('mousedown', onMouseDown)\n    this.props.environment.addEventListener('mouseup', onMouseUp)\n\n    this.cleanup = () => {\n      this._isMounted = false\n      this.props.environment.removeEventListener('mousedown', onMouseDown)\n      this.props.environment.removeEventListener('mouseup', onMouseUp)\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.isControlledProp('selectedItem') &&\n      this.props.selectedItemChanged(\n        prevProps.selectedItem,\n        this.props.selectedItem,\n      )\n    ) {\n      this.internalSetState({\n        type: Downshift.stateChangeTypes.controlledPropUpdatedSelectedItem,\n        inputValue: this.props.itemToString(this.props.selectedItem),\n      })\n    }\n\n    const current =\n      this.props.highlightedIndex === undefined ? this.state : this.props\n    const prev =\n      prevProps.highlightedIndex === undefined ? prevState : prevProps\n\n    if (\n      current.highlightedIndex !== prev.highlightedIndex &&\n      !this.avoidScrolling\n    ) {\n      this.scrollHighlightedItemIntoView()\n    }\n\n    this.updateStatus()\n  }\n\n  componentWillUnmount() {\n    this.cleanup() // avoids memory leak\n  }\n\n  // eslint-disable-next-line complexity\n  render() {\n    const children = unwrapArray(this.props.render || this.props.children, noop)\n    // because the items are rerendered every time we call the children\n    // we clear this out each render and\n    this.clearItems()\n    // we reset this so we know whether the user calls getRootProps during\n    // this render. If they do then we don't need to do anything,\n    // if they don't then we need to clone the element they return and\n    // apply the props for them.\n    this.getRootProps.called = false\n    this.getRootProps.refKey = undefined\n    this.getRootProps.suppressRefError = undefined\n    // we do something similar for getLabelProps\n    this.getLabelProps.called = false\n    // and something similar for getInputProps\n    this.getInputProps.called = false\n    const element = unwrapArray(children(this.getStateAndHelpers()))\n    if (!element) {\n      return null\n    }\n    if (this.getRootProps.called) {\n      if (!this.getRootProps.suppressRefError) {\n        validateGetRootPropsCalledCorrectly(element, this.getRootProps)\n      }\n      return element\n    } else if (isDOMElement(element)) {\n      // they didn't apply the root props, but we can clone\n      // this and apply the props ourselves\n      return React.cloneElement(\n        element,\n        this.getRootProps(getElementProps(element)),\n      )\n    } else {\n      // they didn't apply the root props, but they need to\n      // otherwise we can't query around the autocomplete\n      throw new Error(\n        'downshift: If you return a non-DOM element, you must use apply the getRootProps function',\n      )\n    }\n  }\n}\n\nexport default Downshift\n\nfunction validateGetRootPropsCalledCorrectly(element, {refKey}) {\n  const refKeySpecified = refKey !== 'ref'\n  const isComposite = !isDOMElement(element)\n  if (isComposite && !refKeySpecified) {\n    throw new Error(\n      'downshift: You returned a non-DOM element. You must specify a refKey in getRootProps',\n    )\n  } else if (!isComposite && refKeySpecified) {\n    throw new Error(\n      `downshift: You returned a DOM element. You should not specify a refKey in getRootProps. You specified \"${refKey}\"`,\n    )\n  }\n  if (!getElementProps(element)[refKey]) {\n    throw new Error(\n      `downshift: You must apply the ref prop \"${refKey}\" from getRootProps onto your root element.`,\n    )\n  }\n}\n","import Downshift from './downshift'\n\n/*\n * Fix importing in typescript after rollup compilation\n * https://github.com/rollup/rollup/issues/1156\n * https://github.com/Microsoft/TypeScript/issues/13017#issuecomment-268657860\n */\nDownshift.default = Downshift\n\nexport default Downshift\n"],"names":["statusDiv","document","getElementById","statuses","setStatus","status","isSameAsLast","length","div","getStatusDiv","lastChild","removeChild","firstChild","filter","Boolean","forEach","statusItem","index","appendChild","getStatusChildDiv","display","childDiv","createElement","style","textContent","setAttribute","assign","body","idCounter","cbToCb","cb","noop","findParent","finder","node","rootNode","parentNode","scrollTop","documentElement","getClosestScrollParent","bind","scrollHeight","clientHeight","scrollIntoView","scrollParent","scrollParentStyles","getComputedStyle","scrollParentRect","getBoundingClientRect","scrollParentBorderTopWidth","parseInt","borderTopWidth","scrollParentBorderBottomWidth","borderBottomWidth","bordersWidth","scrollParentTop","top","nodeRect","bottom","nodeOffsetTop","nodeTop","height","debounce","fn","time","timeoutId","args","setTimeout","composeEventHandlers","fns","event","some","defaultPrevented","generateId","prefix","firstDefined","find","a","getA11yStatusMessage","isOpen","highlightedItem","selectedItem","resultCount","previousResultCount","itemToString","unwrapArray","arg","defaultValue","Array","isArray","isDOMElement","element","nodeName","type","getElementProps","props","attributes","requiredProp","fnName","propName","Error","stateKeys","pickState","state","result","hasOwnProperty","k","isPlainObject","obj","Object","prototype","toString","call","Downshift","getState","defaultHighlightedIndex","defaultIsOpen","defaultInputValue","defaultSelectedItem","inputValue","stateToMerge","keys","reduce","key","isControlledProp","undefined","itemCount","items","stateToSet","isItemSelected","onChangeArg","onStateChangeArg","isStateToSetFunction","onInputValueChange","getStateAndHelpers","setState","nextState","nextFullState","stateChangeTypes","unknown","hasMoreStateThanType","onStateChange","onSelect","onChange","onUserAction","highlightedIndex","id","getRootProps","getButtonProps","getLabelProps","getInputProps","getItemProps","openMenu","closeMenu","toggleMenu","selectItem","selectItemAtIndex","selectHighlightedItem","setHighlightedIndex","clearSelection","clearItems","reset","setItemCount","unsetItemCount","_isMounted","onMouseDown","isMouseDown","onMouseUp","target","_rootNode","contains","mouseUp","onOuterClick","environment","addEventListener","cleanup","removeEventListener","prevProps","prevState","selectedItemChanged","internalSetState","controlledPropUpdatedSelectedItem","current","prev","avoidScrolling","scrollHighlightedItemIntoView","updateStatus","children","render","called","refKey","suppressRefError","React","cloneElement","Component","defaultProps","i","warn","String","prevItem","item","window","root_handleClick","onClick","input","count","getItemNodeFromIndex","getItemId","otherStateToSet","openAndHighlightDefaultIndex","highlightDefaultIndex","moveHighlightedIndex","amount","changeHighlightedIndex","moveAmount","itemsLastIndex","getItemCount","baseIndex","newIndex","inputNode","querySelector","inputId","focus","breakingChanges","resetInputOnSelection","itemIndex","rootRef","rest","keyDownHandlers","preventDefault","shiftKey","keyDownArrowDown","keyDownArrowUp","keyDownEnter","keyDownEscape","buttonKeyDownHandlers","keyDownSpaceButton","onKeyDown","eventHandlers","disabled","button_handleClick","button_handleKeyDown","activeElement","clickButton","htmlFor","onBlur","onInput","isPreact","onChangeKey","input_handleChange","input_handleKeyDown","input_handleBlur","changeInput","value","blurInput","onMouseMove","push","indexOf","itemMouseEnter","validateGetRootPropsCalledCorrectly","refKeySpecified","isComposite","default"],"mappings":"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"}